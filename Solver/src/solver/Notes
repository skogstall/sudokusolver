Saker man kan kanske kan lägga till och typ hur
    När man klickar enter på sista textboxen körs programmet
        lägg till i den där keyeventen ba

    Ändra färgerna på de manuellt inmatade värdena
        spara true or false i en annan multidimensionell (eller vanlig är nog enklare) array för att sen sätta färgerna med efter
        möjligtvis bara skriva in de nya värdena med en annan färg, och skita i dem som redan har ett värde. Typ ljusare grå för de nya siffrorna


Saker som BEHÖVS göras

    Plocka infon från tilepane
        göra om den i solver

    göra en metod för att skriva in värden från solver till guin
        visa varningar om det inte går att lösa också

    Göra en metod för att cleara alla textpanes

    koppla knappar till alla metoder








        Lite ideer om hur jag ska gå tillväga

            Jag har en multidimensionell array (9, 9) som heter sudoku[]

            Om man har en till multidimensionell av samma storlek, som har vilken rad och kolumn samt ruta varje index tillhår kan man ba referera till den i funktionen
            Den kan vara fylld av objekt som heter typ något typ "tileinfo" som har row, col och sections som värden. de olika värdena är
            en lista med koordinaterna i typ en touple för de raderna/kolumnerna/sektionerna. coords är en touple typ

            [][][] [][][] [][][]
            [][][] [][][] [][][]
            [][][] [][][] [][][]

            [][][] [][][] [][][]
            [][][] [][][] [][][]
            [][][] [][][] [][][]

            [][][] [][][] [][][]
            [][][] [][][] [][][]
            [][][] [][][] [][][]

        object Coords
            int x
            int y
            coords(x,y)
                set this.x = x
                set this.y = y
        object tile
            Lista<coords> cols
            Lista rows
            Lista section
            tile(x,y){
                coords = new Coords(x,y)
                cols = generateCol(y)
                rows = generateRows(y)
                section = generateSec(x,y)

            }
            generateCol(y){
                lista 1 till 9
                for(i = ett till nio){
                    lägg till
                    coord(i,y)
                }
                returnera lista
            generateCol(x){
                lista 1 till 9
                for(i = ett till nio){
                    lägg till
                    coord(x,i)
                }
                returnera lista
            }
            generateSec(x,y){
                lista xvärden
                lista yvärden
                lista section
                int iterator = 0
                if(x är mindre än 4){
                    xvärden = 1,2,3
                }
                else if(x är större än 6){
                    xvärden = 7,8,9
                }
                annars
                    xvärden = 4,5,6
                }
                Samma övre grej fast för yvärden

                for(xt i xvärden){
                    for(yt i yvärden)
                        section[iterator]= new Coord(xt,yt)
                        iterator++
                }

                returnera section
            }





        Solve( x, y)
            Om x och y är ÖVER 9 9, returnera true
            annars
                (Uppdatera x och y till rätt värde, x1, y1)
                    om x inte är 9
                        x1 = x+1
                        y1 = y
                    annars
                        x1= 1
                        y1 = y+1

                Är den ifylld?
                nej

                    fyll i 1
                        checkvalid(x,y) och solve (x1, y1) är sant
                    annars fyll i 2
                        kolla samma
                    .... fortsätt till 9
                    annars
                        returnera false


                annars
                    om summan av raden upp och ned inte är för stor
                        och solve (x1, y1) är sant
                        returnera sant


        Hjälpmetod för att kolla om det funkar behövs nog

            CheckValid(x,y)

                om någon av dessa är falska, returnera falsk
                    checkList(tileinfo(x,y).cols
                    checkList(tileinfo(x,y).rows
                    checkList(tileinfo(x,y).sections
                annars true

            CheckList( lista med coords coordlist)
                skapa en lista med 9 platser
                skapa en index med platser
                skapa en bool
                for(coords in coordlist){
                    om platsen(sudoku(coord.x, coord.y) inte är null
                        fyll värdet (sudoku (coord.x coord.y))
                        index++
                }
                return Checkduplicates(lista);

            Checkduplicates(lista)
                om lista.toset.size < lista.size
                    returnera sant
                annars
                    returnera falskt



public EventHandler<KeyEvent> numeric_Validation(final Integer max_Lengh) {
    return new EventHandler<KeyEvent>() {
        @Override
        public void handle(KeyEvent e) {
            TextField txt_TextField = (TextField) e.getSource();
            if (txt_TextField.getText().length() >= max_Lengh) {
                e.consume();
            }
            if(e.getCharacter().matches("[0-9.]")){
                if(txt_TextField.getText().contains(".") && e.getCharacter().matches("[.]")){
                    e.consume();
                }else if(txt_TextField.getText().length() == 0 && e.getCharacter().matches("[.]")){
                    e.consume();
                }
            }else{
                e.consume();
            }
        }
    };
}
